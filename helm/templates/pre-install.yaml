apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      initContainers:
      - name: db-setup
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/usr/local/bin/bundle", "exec", "rails", "db:setup"]
        env:
        - name: EXTERNAL_DNS_NAME
          value: "{{ .Values.rails.external_dns_name }}"
        - name: DATABASE_HOST
          value: "{{ .Values.database.host }}"
        - name: DATABASE_PORT
          value: "{{ .Values.database.port }}"
        - name: SECRET_KEY_BASE
          value: "{{ .Values.rails.secretkeybase }}"
        - name: SKIP_DB_WAIT
          value: "false"
        - name: DATABASE_USERNAME
          value: "{{ .Values.database.username }}"
        - name: DATABASE_PASSWORD
          value: "{{ .Values.database.password }}"
        - name: DISABLE_DATABASE_ENVIRONMENT_CHECK
          value: "1"
        - name: RAILS_ENV
          value: "development"
      containers:
      - name: db-migrations
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/usr/local/bin/bundle", "exec", "rails", "db:migrate"]
        env:
        - name: EXTERNAL_DNS_NAME
          value: "{{ .Values.rails.external_dns_name }}"
        - name: DATABASE_HOST
          value: "{{ .Values.database.host }}"
        - name: DATABASE_PORT
          value: "{{ .Values.database.port }}"
        - name: SECRET_KEY_BASE
          value: "{{ .Values.rails.secretkeybase }}"
        - name: SKIP_DB_WAIT
          value: "false"
        - name: DATABASE_USERNAME
          value: "{{ .Values.database.username }}"
        - name: DATABASE_PASSWORD
          value: "{{ .Values.database.password }}"
        - name: DISABLE_DATABASE_ENVIRONMENT_CHECK
          value: "1"
        - name: RAILS_ENV
          value: "development"
